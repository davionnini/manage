<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.admin.dao.RoleMapper">
    <resultMap id="requireResultMap" type="com.app.admin.model.Role.Role">
        <id property="id" column="id" />
        <result property="roleName" column="role_name"/>
        <result property="roleDesc" column="role_desc"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap id="complexResultMap" type="com.app.admin.model.Role.Role">
        <id property="id" column="id" />
        <result property="roleName" column="role_name"/>
        <result property="roleDesc" column="role_desc"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="funcList" javaType="java.util.List" ofType="com.app.admin.model.Func.Func" column="id" resultMap="funcResult" />
    </resultMap>
    <resultMap id="funcResult" type="com.app.admin.model.Func.Func">
        <id property="id" column="func_id" />
        <result property="funcDesc" column="func_desc"/>
        <result property="funcName" column="func_name"/>
        <result property="funcUrl" column="func_url"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <select id="getAll" resultMap="requireResultMap">
        select * from role where is_delete = 1
    </select>

    <select id="getAllWithFunc" resultMap="complexResultMap">
        SELECT
        	*
        FROM
        	role AS a
        	JOIN func_role AS b ON a.id = b.role_id
        	JOIN func	AS c ON c.id = b.func_id
    </select>
    <select id="getById" parameterType="java.lang.Long" resultMap="requireResultMap">
        select * from role where is_delete = 1 AND id = #{id}
    </select>

    <select id="getByIds" parameterType="java.util.List" resultMap="requireResultMap">
        select * from role where is_delete = 1 AND id in
        <foreach item="roleIds" index="index" collection="list"
                 open="(" separator="," close=")">
            #{roleIds}
        </foreach>
    </select>


    <select id="getByUserId" parameterType="java.lang.Long" resultMap="requireResultMap">
        SELECT
        	a.*
        FROM
        	role AS a
        	JOIN role_user AS b ON a.id = b.user_id
        WHERE
        	a.is_delete = 1 AND b.is_delete = 1
        	AND b.user_id = #{userId}
    </select>


    <insert id="insert" parameterType="com.app.admin.model.Role.Role">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO role
        (`role_name`,`role_desc`)
        VALUES
        (#{roleName},#{roleDesc})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.app.admin.model.Role.Role">
        UPDATE `role`
        <set>
            <if test="roleName != null">
                `role_name` = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                `role_desc` = #{roleDesc,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <delete id="delete" parameterType="java.lang.Long">
        delete from role where id=#{id}
    </delete>

</mapper>