<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.admin.dao.UserMapper">
    <resultMap id="userResultMap" type="com.app.admin.model.User.User">
        <id property="id" column="id" />
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="roleList" column="id" select="com.app.admin.dao.RoleMapper.getByIdForUser"/>
    </resultMap>
    <resultMap id="FuncResultMap" type="com.app.admin.model.Func.Func">
        <id property="id" column="id" />
        <result property="funcName" column="func_name"/>
        <result property="funcDesc" column="func_desc"/>
        <result property="funcUrl" column="func_url"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <resultMap id="RoleResultMap" type="com.app.admin.model.Role.Role">
        <id property="id" column="role_id" />
        <result property="roleName" column="role_name"/>
        <result property="roleDesc" column="role_desc"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <select id="getAll" resultMap="userResultMap">
        SELECT
        	a.*
        FROM
        	USER AS a
    </select>
    <insert id="insert" parameterType="com.app.admin.model.User.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user
            (`user_id`,`user_name`,`password`)
        VALUES
            (#{userId},#{userName},#{password})
    </insert>

    <select id="getByNameAndPassword" parameterType="java.lang.String" resultMap="userResultMap">
          select * from user where is_delete = 1 and user_name = #{username} AND password = #{password}
    </select>

    <select id="getByIdNotJoin" resultMap="userResultMap">
          select * from user where is_delete = 1 and id = #{userId}
    </select>

    <select id="getByName" resultMap="userResultMap">
          select * from user where is_delete = 1 and user_name = #{username}
    </select>

    <select id="getByLikeName"  parameterType="com.app.admin.model.User.User" resultMap="userResultMap">
        select * from user where is_delete = 1
        <if test="userName != null">
            and user_name like CONCAT('%', #{userName}, '%')
        </if>
    </select>
    <select id="getById" parameterType="java.lang.Long" resultMap="userResultMap">
        SELECT
        	a.*,c.role_desc,c.id as role_id
        FROM
        	USER AS a
        	JOIN role_user AS b ON a.id = b.user_id
        	JOIN role AS c ON b.role_id = c.id
        WHERE
        	a.is_delete = 1
        	AND b.is_delete = 1
        	AND c.is_delete = 1
        	AND a.id = #{id}
    </select>

    <select id="funcList" resultMap="FuncResultMap">
        SELECT
	        e.*
        FROM
	        role_user AS a
	        JOIN user AS b ON a.user_id = b.id
	        JOIN role AS c ON a.role_id = c.id
	        JOIN func_role AS d ON c.id = d.role_id
	        JOIN func as e ON e.id = d.func_id
	        WHERE b.id = #{id,jdbcType=BIGINT}
    </select>

    <update id="updateByPrimaryKey" parameterType="com.app.admin.model.User.User">
        UPDATE `user`
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE from `user` where id=#{id}
    </delete>

</mapper>